{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\"; // Etat par défaut du Slice\n\nconst initialState = {\n  numeroPage: 1,\n  resultats: [],\n  status: 'inactif',\n  // pokemonCible: '',\n  detailPokemonCible: []\n};\n/*export const requeteIndex = createAsyncThunk('pokemons/numeroPage',\n    async requete => {\n    const reponse = await client.get('https://pokeapi.co/api/v2/pokemon?limit=40&offset=' + requete)\n        return reponse.results\n    })\n */\n\nexport const requeteIndex = createAsyncThunk('pokemons/query', async query => {\n  const response = await client.get(query);\n  console.log(response);\n  return response;\n});\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/resultats', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {\n    pokemonNumeroRequete(state, action) {\n      state.numeroPokemon = action.payload.numeroPokemon;\n    }\n\n  },\n  extraReducers: {\n    [requeteIndex.pending]: state => {\n      state.status = 'en cours';\n    },\n    [requeteIndex.fulfilled]: (state, action) => {\n      state.status = 'succès';\n      state.resultats = action.payload;\n    },\n    [requeteDetailPokemon().pending]: state => {\n      state.statusPokemonCible = 'en cours';\n    },\n    [requeteDetailPokemon().fulfilled]: (state, action) => {\n      state.statusPokemonCible = 'succès';\n      state.detailPokemonCible = action.payload;\n    }\n  }\n});\nexport const selectNumeroPage = state => state.pokemons.numeroPage;\nexport const selectPokemon = state => state.pokemons.resultats;\nexport const selectorStatus = state => state.pokemons.status;\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible;\nexport const {\n  pokemonNumeroRequete\n} = pokemonSlice.actions;\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","numeroPage","resultats","status","detailPokemonCible","requeteIndex","query","response","get","console","log","requeteDetailPokemon","requete","reponse","pokemonSlice","name","reducers","pokemonNumeroRequete","state","action","numeroPokemon","payload","extraReducers","pending","fulfilled","statusPokemonCible","selectNumeroPage","pokemons","selectPokemon","selectorStatus","selectDetailPokemonCible","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,MAAR,QAAqB,kBAArB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CADK;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,MAAM,EAAE,SAHS;AAIjB;AACAC,EAAAA,kBAAkB,EAAE;AALH,CAArB;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CAAC,gBAAD,EACxC,MAAMS,KAAN,IAAe;AACX,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,GAAP,CAAWF,KAAX,CAAvB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,SAAOA,QAAP;AACH,CALuC,CAArC;AAOP,OAAO,MAAMI,oBAAoB,GAAGd,gBAAgB,CAAC,oBAAD,EAChD,MAAMe,OAAN,IAAiB;AACb,QAAMC,OAAO,GAAG,MAAMd,MAAM,CAACS,GAAP,CAAW,uCAAuCI,OAAlD,CAAtB;AACA,SAAOC,OAAP;AACH,CAJ+C,CAA7C;AAMP,MAAMC,YAAY,GAAGhB,WAAW,CAAC;AAC7BiB,EAAAA,IAAI,EAAE,UADuB;AAE7Bf,EAAAA,YAF6B;AAG7BgB,EAAAA,QAAQ,EAAE;AACNC,IAAAA,oBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC/BD,MAAAA,KAAK,CAACE,aAAN,GAAsBD,MAAM,CAACE,OAAP,CAAeD,aAArC;AACH;;AAHK,GAHmB;AAQ7BE,EAAAA,aAAa,EAAE;AACX,KAACjB,YAAY,CAACkB,OAAd,GAAyBL,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACf,MAAN,GAAe,UAAf;AACH,KAHU;AAIX,KAACE,YAAY,CAACmB,SAAd,GAA0B,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACf,MAAN,GAAe,QAAf;AACAe,MAAAA,KAAK,CAAChB,SAAN,GAAkBiB,MAAM,CAACE,OAAzB;AACH,KAPU;AAQX,KAACV,oBAAoB,GAAGY,OAAxB,GAAmCL,KAAD,IAAW;AACzCA,MAAAA,KAAK,CAACO,kBAAN,GAA2B,UAA3B;AACH,KAVU;AAWX,KAACd,oBAAoB,GAAGa,SAAxB,GAAoC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACO,kBAAN,GAA2B,QAA3B;AACAP,MAAAA,KAAK,CAACd,kBAAN,GAA2Be,MAAM,CAACE,OAAlC;AACH;AAdU;AARc,CAAD,CAAhC;AA0BA,OAAO,MAAMK,gBAAgB,GAAGR,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAe1B,UAAjD;AAEP,OAAO,MAAM2B,aAAa,GAAGV,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAezB,SAA9C;AAEP,OAAO,MAAM2B,cAAc,GAAGX,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAexB,MAA/C;AAEP,OAAO,MAAM2B,wBAAwB,GAAGZ,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAevB,kBAAzD;AAEP,OAAO,MAAM;AAAEa,EAAAA;AAAF,IAA2BH,YAAY,CAACiB,OAA9C;AAEP,eAAejB,YAAY,CAACkB,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nconst initialState = {\n    numeroPage: 1,\n    resultats: [],\n    status: 'inactif',\n    // pokemonCible: '',\n    detailPokemonCible: [],\n}\n\n/*export const requeteIndex = createAsyncThunk('pokemons/numeroPage',\n    async requete => {\n    const reponse = await client.get('https://pokeapi.co/api/v2/pokemon?limit=40&offset=' + requete)\n        return reponse.results\n    })\n */\n\nexport const requeteIndex = createAsyncThunk('pokemons/query',\n    async query => {\n        const response = await client.get(query)\n        console.log(response)\n        return response\n    })\n\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/resultats',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\nconst pokemonSlice = createSlice({\n    name: 'pokemons',\n    initialState,\n    reducers: {\n        pokemonNumeroRequete(state, action){\n            state.numeroPokemon = action.payload.numeroPokemon\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state) => {\n            state.status = 'en cours'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succès'\n            state.resultats = action.payload\n        },\n        [requeteDetailPokemon().pending]: (state) => {\n            state.statusPokemonCible = 'en cours'\n        },\n        [requeteDetailPokemon().fulfilled]: (state, action) => {\n            state.statusPokemonCible = 'succès'\n            state.detailPokemonCible = action.payload\n        }\n    }\n})\n\nexport const selectNumeroPage = state => state.pokemons.numeroPage\n\nexport const selectPokemon = state => state.pokemons.resultats\n\nexport const selectorStatus = state => state.pokemons.status\n\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible\n\nexport const { pokemonNumeroRequete } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}