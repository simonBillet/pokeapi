{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\"; // Etat par défaut du Slice\n\nconst initialState = {\n  resultats: [{\n    url: '1',\n    name: 'Document 1'\n  }, {\n    url: '2',\n    name: 'Document 2'\n  }],\n  status: 'inactif',\n  statusPokemonCible: 'rien',\n  detailPokemonCible: '',\n  statusPokemonAleatoire: 'rien',\n  detailPokemonAleatoire: ''\n}; // Recherche d'une liste de pokémon\n\nexport const requeteIndex = createAsyncThunk('pokemons/resultats', async query => {\n  const reponse = await client.get(query);\n  return reponse;\n}); // Recherche d'un pokémon par son nom\n\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/detailPokemonCible', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n}); // Recherche d'un pokémon par son id\n\nexport const requetePokemonId = createAsyncThunk('pokemons/detailPokemonAleatoire', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {\n    pokemonNumeroRequete(state, action) {\n      state.status = action.payload.status;\n    },\n\n    pokemonDetailCible(state, action) {\n      state.statusPokemonCible = action.payload.statusPokemonCible;\n    },\n\n    pokemonDetailAleatoire(state, action) {\n      state.statusPokemonAleatoire = action.payload.statusPokemonAleatoire;\n    }\n\n  },\n  extraReducers: {\n    [requeteIndex.pending]: state => {\n      state.status = 'en cours';\n    },\n    [requeteIndex.fulfilled]: (state, action) => {\n      state.status = 'succès';\n      state.resultats = action.payload;\n    },\n    [requeteDetailPokemon.fulfilled]: (state, action) => {\n      state.statusPokemonCible = 'succès';\n      state.detailPokemonCible = action.payload;\n    },\n    [requetePokemonId.fulfilled]: (state, action) => {\n      state.statusPokemonAleatoire = 'succès';\n      state.detailPokemonAleatoire = action.payload.detailPokemonAleatoire;\n    }\n  }\n});\nexport const selectPokemonsListe = state => state.pokemons.resultats;\nexport const selectorStatus = state => state.pokemons.status;\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible;\nexport const selectorStatusPokemonCible = state => state.pokemons.statusPokemonCible;\nexport const selectDetailPokemonAleatoire = state => state.pokemons.detailPokemonAleatoire;\nexport const selectorStatusPokemonAleatoire = state => state.pokemons.statusPokemonAleatoire;\nexport const {\n  pokemonNumeroRequete,\n  pokemonDetailCible,\n  pokemonDetailAleatoire\n} = pokemonSlice.actions;\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","resultats","url","name","status","statusPokemonCible","detailPokemonCible","statusPokemonAleatoire","detailPokemonAleatoire","requeteIndex","query","reponse","get","requeteDetailPokemon","requete","requetePokemonId","pokemonSlice","reducers","pokemonNumeroRequete","state","action","payload","pokemonDetailCible","pokemonDetailAleatoire","extraReducers","pending","fulfilled","selectPokemonsListe","pokemons","selectorStatus","selectDetailPokemonCible","selectorStatusPokemonCible","selectDetailPokemonAleatoire","selectorStatusPokemonAleatoire","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nconst initialState = {\n    resultats: [\n        { url: '1', name: 'Document 1' },\n        { url: '2', name: 'Document 2' }\n    ],\n    status: 'inactif',\n    statusPokemonCible: 'rien',\n    detailPokemonCible: '',\n    statusPokemonAleatoire: 'rien',\n    detailPokemonAleatoire: ''\n}\n\n\n// Recherche d'une liste de pokémon\nexport const requeteIndex = createAsyncThunk('pokemons/resultats',\n    async query => {\n        const reponse = await client.get(query)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son nom\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/detailPokemonCible',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son id\nexport const requetePokemonId = createAsyncThunk('pokemons/detailPokemonAleatoire',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n\nconst pokemonSlice = createSlice({\n    name: 'pokemons',\n    initialState,\n    reducers: {\n        pokemonNumeroRequete(state, action){\n            state.status = action.payload.status\n        },\n        pokemonDetailCible(state, action){\n            state.statusPokemonCible = action.payload.statusPokemonCible\n        },\n        pokemonDetailAleatoire(state, action){\n            state.statusPokemonAleatoire = action.payload.statusPokemonAleatoire\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state) => {\n            state.status = 'en cours'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succès'\n            state.resultats = action.payload\n        },\n        [requeteDetailPokemon.fulfilled]: (state, action) => {\n            state.statusPokemonCible = 'succès'\n            state.detailPokemonCible = action.payload\n        },\n        [requetePokemonId.fulfilled]: (state, action) => {\n            state.statusPokemonAleatoire = 'succès'\n            state.detailPokemonAleatoire = action.payload.detailPokemonAleatoire\n        }\n    }\n})\n\nexport const selectPokemonsListe = state => state.pokemons.resultats\n\nexport const selectorStatus = state => state.pokemons.status\n\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible\n\nexport const selectorStatusPokemonCible = state => state.pokemons.statusPokemonCible\n\nexport const selectDetailPokemonAleatoire = state => state.pokemons.detailPokemonAleatoire\n\nexport const selectorStatusPokemonAleatoire = state => state.pokemons.statusPokemonAleatoire\n\nexport const { pokemonNumeroRequete, pokemonDetailCible, pokemonDetailAleatoire } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}