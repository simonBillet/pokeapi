{"ast":null,"code":"import _defineProperty from\"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{client}from\"../../api/client\";// Etat par défaut du Slice\nexport var initialState={resultats:[],status:'inactif',statusPokemonCible:'rien',detailPokemonCible:'',statusPokemonAleatoire:'rien',detailPokemonAleatoire:'',statusListeType:'rien',listePokemonType:[],listeMesFavoris:[]};// Recherche d'une liste de pokémon\nexport var requeteIndex=createAsyncThunk('pokemons/resultats',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(query){var reponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return client.get(query);case 2:reponse=_context.sent;return _context.abrupt(\"return\",reponse);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());// Recherche d'un pokémon par son nom\nexport var requeteDetailPokemon=createAsyncThunk('pokemons/detailPokemonCible',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(requete){var reponse;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return client.get('https://pokeapi.co/api/v2/pokemon/'+requete);case 2:reponse=_context2.sent;return _context2.abrupt(\"return\",reponse);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());// Recherche d'un pokémon par son id\nexport var requetePokemonId=createAsyncThunk('pokemons/detailPokemonAleatoire',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(requete){var reponse;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return client.get('https://pokeapi.co/api/v2/pokemon/'+requete);case 2:reponse=_context3.sent;return _context3.abrupt(\"return\",reponse);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());// recherche d'une liste de pokemon en fonction de leurs types\nexport var requetePokemonType=createAsyncThunk('pokemons/listePokemonType',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(requete){var reponse;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return client.get('https://pokeapi.co/api/v2/type/'+requete);case 2:reponse=_context4.sent;return _context4.abrupt(\"return\",reponse);case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}());var pokemonSlice=createSlice({name:'pokemons',initialState:initialState,reducers:{pokemonNumeroRequete:function pokemonNumeroRequete(state,action){state.status=action.payload.status;},pokemonDetailCible:function pokemonDetailCible(state,action){state.statusPokemonCible=action.payload.statusPokemonCible;},pokemonDetailAleatoire:function pokemonDetailAleatoire(state,action){state.statusPokemonAleatoire=action.payload.statusPokemonAleatoire;},pokemonDetailType:function pokemonDetailType(state,action){state.statusListeType=action.payload.statusListeType;},ajouterPokemonMesFavoris:function ajouterPokemonMesFavoris(state,pokemon){state.listeMesFavoris.push(pokemon.payload);},supprimerPokemonMesFavoris:function supprimerPokemonMesFavoris(state,pokemon){console.log(state.listeMesFavoris);state.listeMesFavoris.filter(function(item){console.log('début');console.log(item);console.log(pokemon);return item.id!==pokemon.payload.id;});}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,requeteIndex.pending,function(state){state.status='en cours';}),_defineProperty(_extraReducers,requeteIndex.fulfilled,function(state,action){state.status='succès';state.resultats=action.payload;}),_defineProperty(_extraReducers,requeteDetailPokemon.fulfilled,function(state,action){state.statusPokemonCible='succès';state.detailPokemonCible=action.payload;}),_defineProperty(_extraReducers,requetePokemonId.fulfilled,function(state,action){state.statusPokemonAleatoire='succès';state.detailPokemonAleatoire=action.payload;}),_defineProperty(_extraReducers,requetePokemonType.fulfilled,function(state,action){state.statusListeType='succès';state.listePokemonType=action.payload;}),_extraReducers)});export var selectPokemonsListe=function selectPokemonsListe(state){return state.pokemons.resultats;};export var selectorStatus=function selectorStatus(state){return state.pokemons.status;};export var selectDetailPokemonCible=function selectDetailPokemonCible(state){return state.pokemons.detailPokemonCible;};export var selectorStatusPokemonCible=function selectorStatusPokemonCible(state){return state.pokemons.statusPokemonCible;};export var selectDetailPokemonAleatoire=function selectDetailPokemonAleatoire(state){return state.pokemons.detailPokemonAleatoire;};export var selectorStatusPokemonAleatoire=function selectorStatusPokemonAleatoire(state){return state.pokemons.statusPokemonAleatoire;};export var selectPokemonListeType=function selectPokemonListeType(state){return state.pokemons.listePokemonType;};export var selectorStatusListeType=function selectorStatusListeType(state){return state.pokemons.statusListeType;};export var selectListeMesFavoris=function selectListeMesFavoris(state){return state.pokemons.listeMesFavoris;};var _pokemonSlice$actions=pokemonSlice.actions,pokemonNumeroRequete=_pokemonSlice$actions.pokemonNumeroRequete,pokemonDetailCible=_pokemonSlice$actions.pokemonDetailCible,pokemonDetailAleatoire=_pokemonSlice$actions.pokemonDetailAleatoire,pokemonDetailType=_pokemonSlice$actions.pokemonDetailType,ajouterPokemonMesFavoris=_pokemonSlice$actions.ajouterPokemonMesFavoris,supprimerPokemonMesFavoris=_pokemonSlice$actions.supprimerPokemonMesFavoris;export{pokemonNumeroRequete,pokemonDetailCible,pokemonDetailAleatoire,pokemonDetailType,ajouterPokemonMesFavoris,supprimerPokemonMesFavoris};export default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","resultats","status","statusPokemonCible","detailPokemonCible","statusPokemonAleatoire","detailPokemonAleatoire","statusListeType","listePokemonType","listeMesFavoris","requeteIndex","query","get","reponse","requeteDetailPokemon","requete","requetePokemonId","requetePokemonType","pokemonSlice","name","reducers","pokemonNumeroRequete","state","action","payload","pokemonDetailCible","pokemonDetailAleatoire","pokemonDetailType","ajouterPokemonMesFavoris","pokemon","push","supprimerPokemonMesFavoris","console","log","filter","item","id","extraReducers","pending","fulfilled","selectPokemonsListe","pokemons","selectorStatus","selectDetailPokemonCible","selectorStatusPokemonCible","selectDetailPokemonAleatoire","selectorStatusPokemonAleatoire","selectPokemonListeType","selectorStatusListeType","selectListeMesFavoris","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nexport const initialState = {\n    resultats: [],\n    status: 'inactif',\n    statusPokemonCible: 'rien',\n    detailPokemonCible: '',\n    statusPokemonAleatoire: 'rien',\n    detailPokemonAleatoire: '',\n    statusListeType: 'rien',\n    listePokemonType: [],\n    listeMesFavoris: []\n}\n\n\n// Recherche d'une liste de pokémon\nexport const requeteIndex = createAsyncThunk('pokemons/resultats',\n    async query => {\n        const reponse = await client.get(query)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son nom\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/detailPokemonCible',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son id\nexport const requetePokemonId = createAsyncThunk('pokemons/detailPokemonAleatoire',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n// recherche d'une liste de pokemon en fonction de leurs types\nexport const requetePokemonType = createAsyncThunk('pokemons/listePokemonType',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/type/' + requete);\n        return reponse\n    })\n\n\nconst pokemonSlice = createSlice({\n    name: 'pokemons',\n    initialState,\n    reducers: {\n        pokemonNumeroRequete(state, action){\n            state.status = action.payload.status\n        },\n        pokemonDetailCible(state, action){\n            state.statusPokemonCible = action.payload.statusPokemonCible\n        },\n        pokemonDetailAleatoire(state, action){\n            state.statusPokemonAleatoire = action.payload.statusPokemonAleatoire\n        },\n        pokemonDetailType(state, action){\n            state.statusListeType = action.payload.statusListeType\n        },\n        ajouterPokemonMesFavoris(state, pokemon){\n            state.listeMesFavoris.push(pokemon.payload)\n        },\n        supprimerPokemonMesFavoris(state, pokemon){\n            console.log(state.listeMesFavoris)\n            state.listeMesFavoris.filter(item => {\n                console.log('début')\n                console.log(item)\n                console.log(pokemon)\n                return item.id !== pokemon.payload.id\n            })\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state) => {\n            state.status = 'en cours'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succès'\n            state.resultats = action.payload\n        },\n        [requeteDetailPokemon.fulfilled]: (state, action) => {\n            state.statusPokemonCible = 'succès'\n            state.detailPokemonCible = action.payload\n        },\n        [requetePokemonId.fulfilled]: (state, action) => {\n            state.statusPokemonAleatoire = 'succès'\n            state.detailPokemonAleatoire = action.payload\n        },\n        [requetePokemonType.fulfilled]: (state, action) => {\n            state.statusListeType = 'succès'\n            state.listePokemonType = action.payload\n        }\n    }\n})\n\nexport const selectPokemonsListe = state => state.pokemons.resultats\n\nexport const selectorStatus = state => state.pokemons.status\n\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible\n\nexport const selectorStatusPokemonCible = state => state.pokemons.statusPokemonCible\n\nexport const selectDetailPokemonAleatoire = state => state.pokemons.detailPokemonAleatoire\n\nexport const selectorStatusPokemonAleatoire = state => state.pokemons.statusPokemonAleatoire\n\nexport const selectPokemonListeType = state => state.pokemons.listePokemonType\n\nexport const selectorStatusListeType = state => state.pokemons.statusListeType\n\nexport const selectListeMesFavoris = state => state.pokemons.listeMesFavoris\n\nexport const { pokemonNumeroRequete, pokemonDetailCible, pokemonDetailAleatoire, pokemonDetailType, ajouterPokemonMesFavoris, supprimerPokemonMesFavoris } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}