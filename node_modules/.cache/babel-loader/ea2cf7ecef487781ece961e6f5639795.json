{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\"; // Etat par défaut du Slice\n\nconst initialState = {\n  resultats: [],\n  status: 'inactif',\n  // pokemonCible: '',\n  detailPokemonCible: []\n};\n/*export const requeteIndex = createAsyncThunk('pokemons/numeroPage',\n    async requete => {\n    const reponse = await client.get('https://pokeapi.co/api/v2/pokemon?limit=40&offset=' + requete)\n        return reponse.results\n    })\n*/\n\nexport const requeteIndex = createAsyncThunk('pokemons/resultats', async query => {\n  const reponse = await client.get(query);\n  return reponse;\n});\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/resultats', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {\n    pokemonNumeroRequete(state, action) {\n      state.status = action.payload.status;\n    }\n\n  },\n  extraReducers: {\n    [requeteIndex.pending]: state => {\n      state.status = 'en cours';\n    },\n    [requeteIndex.fulfilled]: (state, action) => {\n      state.status = 'succès';\n      state.resultats = action.payload;\n    },\n    [requeteDetailPokemon().pending]: state => {\n      state.statusPokemonCible = 'en cours';\n    },\n    [requeteDetailPokemon().fulfilled]: (state, action) => {\n      state.statusPokemonCible = 'succès';\n      state.detailPokemonCible = action.payload;\n    }\n  }\n});\nexport const selectPokemonsListe = state => state.pokemons.resultats;\nexport const selectorStatus = state => state.pokemons.status;\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible;\nexport const {\n  pokemonNumeroRequete\n} = pokemonSlice.actions;\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","resultats","status","detailPokemonCible","requeteIndex","query","reponse","get","requeteDetailPokemon","requete","pokemonSlice","name","reducers","pokemonNumeroRequete","state","action","payload","extraReducers","pending","fulfilled","statusPokemonCible","selectPokemonsListe","pokemons","selectorStatus","selectDetailPokemonCible","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,MAAR,QAAqB,kBAArB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,MAAM,EAAE,SAFS;AAGjB;AACAC,EAAAA,kBAAkB,EAAE;AAJH,CAArB;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGP,gBAAgB,CAAC,oBAAD,EACxC,MAAMQ,KAAN,IAAe;AACX,QAAMC,OAAO,GAAG,MAAMP,MAAM,CAACQ,GAAP,CAAWF,KAAX,CAAtB;AACA,SAAOC,OAAP;AACH,CAJuC,CAArC;AAMP,OAAO,MAAME,oBAAoB,GAAGX,gBAAgB,CAAC,oBAAD,EAChD,MAAMY,OAAN,IAAiB;AACb,QAAMH,OAAO,GAAG,MAAMP,MAAM,CAACQ,GAAP,CAAW,uCAAuCE,OAAlD,CAAtB;AACA,SAAOH,OAAP;AACH,CAJ+C,CAA7C;AAMP,MAAMI,YAAY,GAAGZ,WAAW,CAAC;AAC7Ba,EAAAA,IAAI,EAAE,UADuB;AAE7BX,EAAAA,YAF6B;AAG7BY,EAAAA,QAAQ,EAAE;AACNC,IAAAA,oBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC/BD,MAAAA,KAAK,CAACZ,MAAN,GAAea,MAAM,CAACC,OAAP,CAAed,MAA9B;AACH;;AAHK,GAHmB;AAQ7Be,EAAAA,aAAa,EAAE;AACX,KAACb,YAAY,CAACc,OAAd,GAAyBJ,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACZ,MAAN,GAAe,UAAf;AACH,KAHU;AAIX,KAACE,YAAY,CAACe,SAAd,GAA0B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACZ,MAAN,GAAe,QAAf;AACAY,MAAAA,KAAK,CAACb,SAAN,GAAkBc,MAAM,CAACC,OAAzB;AACH,KAPU;AAQX,KAACR,oBAAoB,GAAGU,OAAxB,GAAmCJ,KAAD,IAAW;AACzCA,MAAAA,KAAK,CAACM,kBAAN,GAA2B,UAA3B;AACH,KAVU;AAWX,KAACZ,oBAAoB,GAAGW,SAAxB,GAAoC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACM,kBAAN,GAA2B,QAA3B;AACAN,MAAAA,KAAK,CAACX,kBAAN,GAA2BY,MAAM,CAACC,OAAlC;AACH;AAdU;AARc,CAAD,CAAhC;AA0BA,OAAO,MAAMK,mBAAmB,GAAGP,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAerB,SAApD;AAEP,OAAO,MAAMsB,cAAc,GAAGT,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAepB,MAA/C;AAEP,OAAO,MAAMsB,wBAAwB,GAAGV,KAAK,IAAIA,KAAK,CAACQ,QAAN,CAAenB,kBAAzD;AAEP,OAAO,MAAM;AAAEU,EAAAA;AAAF,IAA2BH,YAAY,CAACe,OAA9C;AAEP,eAAef,YAAY,CAACgB,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nconst initialState = {\n    resultats: [],\n    status: 'inactif',\n    // pokemonCible: '',\n    detailPokemonCible: [],\n}\n\n/*export const requeteIndex = createAsyncThunk('pokemons/numeroPage',\n    async requete => {\n    const reponse = await client.get('https://pokeapi.co/api/v2/pokemon?limit=40&offset=' + requete)\n        return reponse.results\n    })\n*/\n\nexport const requeteIndex = createAsyncThunk('pokemons/resultats',\n    async query => {\n        const reponse = await client.get(query)\n        return reponse\n    })\n\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/resultats',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\nconst pokemonSlice = createSlice({\n    name: 'pokemons',\n    initialState,\n    reducers: {\n        pokemonNumeroRequete(state, action){\n            state.status = action.payload.status\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state) => {\n            state.status = 'en cours'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succès'\n            state.resultats = action.payload\n        },\n        [requeteDetailPokemon().pending]: (state) => {\n            state.statusPokemonCible = 'en cours'\n        },\n        [requeteDetailPokemon().fulfilled]: (state, action) => {\n            state.statusPokemonCible = 'succès'\n            state.detailPokemonCible = action.payload\n        }\n    }\n})\n\nexport const selectPokemonsListe = state => state.pokemons.resultats\n\nexport const selectorStatus = state => state.pokemons.status\n\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible\n\nexport const { pokemonNumeroRequete } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}