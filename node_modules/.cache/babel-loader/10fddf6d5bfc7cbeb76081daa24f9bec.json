{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { requetePokemonId, selectDetailPokemonAleatoire, selectorStatusPokemonAleatoire } from \"./pokemonsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { Spinner } from \"./Spinner\";\nexport const PokemonRandom = () => {\n  _s();\n\n  const pokemon = useSelector(selectDetailPokemonAleatoire); // Status du pokémon\n\n  const state = useSelector(selectorStatusPokemonAleatoire); // dispatch\n\n  const dispatch = useDispatch(); // Fonction permettant de générer un nombre aléatoire\n\n  function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  } // Limitation à 898 nombres car c'est le nombre de pokémon dans l'api\n\n\n  const index = Math.round(getRandomArbitrary(1, 898));\n  useEffect(() => {\n    dispatch(requetePokemonId(index));\n  });\n  console.log(pokemon); // Permet d'avoir les informations détaillé du pokémon\n\n  const affichageDetailPokemon = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-detail-pokemon\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"card-detail-pokemon-image\",\n      src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pokemon.id + \".png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-detail-pokemon-nom\",\n      children: pokemon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state !== 'rien' ? affichageDetailPokemon : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonRandom, \"aGmXo/SEam4stS6isKK8trc+jhg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PokemonRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonRandom\");","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonRandom.js"],"names":["React","useEffect","useDispatch","requetePokemonId","selectDetailPokemonAleatoire","selectorStatusPokemonAleatoire","useSelector","Spinner","PokemonRandom","pokemon","state","dispatch","getRandomArbitrary","min","max","Math","random","index","round","console","log","affichageDetailPokemon","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,gBAAR,EAA0BC,4BAA1B,EAAwDC,8BAAxD,QAA6F,iBAA7F;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAMC,OAAO,GAAGH,WAAW,CAACF,4BAAD,CAA3B,CAD+B,CAG/B;;AACA,QAAMM,KAAK,GAAGJ,WAAW,CAACD,8BAAD,CAAzB,CAJ+B,CAK/B;;AACA,QAAMM,QAAQ,GAAGT,WAAW,EAA5B,CAN+B,CAQ/B;;AACA,WAASU,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAClC,WAAOC,IAAI,CAACC,MAAL,MAAiBF,GAAG,GAAGD,GAAvB,IAA8BA,GAArC;AACH,GAX8B,CAa/B;;;AACA,QAAMI,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWN,kBAAkB,CAAC,CAAD,EAAI,GAAJ,CAA7B,CAAd;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACR,gBAAgB,CAACc,KAAD,CAAjB,CAAR;AACH,GAFQ,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ,EApB+B,CAqB/B;;AACA,QAAMY,sBAAsB,gBACxB;AAAK,IAAA,SAAS,EAAE,qBAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,2BAAhB;AAA6C,MAAA,GAAG,EAAE,8EAA8EZ,OAAO,CAACa,EAAtF,GAA2F;AAA7I;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAE,yBAAf;AAAA,gBAA2Cb,OAAO,CAACc;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,sBACI;AAAA,cACKb,KAAK,KAAK,MAAV,GACKW,sBADL,gBAEK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArCM;;GAAMb,a;UACOF,W,EAGFA,W,EAEGJ,W;;;KANRM,a","sourcesContent":["import React, {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {requetePokemonId, selectDetailPokemonAleatoire, selectorStatusPokemonAleatoire} from \"./pokemonsSlice\";\nimport { useSelector } from \"react-redux\";\nimport {Spinner} from \"./Spinner\";\n\nexport const PokemonRandom = () => {\n    const pokemon = useSelector(selectDetailPokemonAleatoire)\n\n    // Status du pokémon\n    const state = useSelector(selectorStatusPokemonAleatoire)\n    // dispatch\n    const dispatch = useDispatch()\n\n    // Fonction permettant de générer un nombre aléatoire\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    // Limitation à 898 nombres car c'est le nombre de pokémon dans l'api\n    const index = Math.round(getRandomArbitrary(1, 898))\n\n    useEffect(() => {\n        dispatch(requetePokemonId(index))\n    })\n\n    console.log(pokemon)\n    // Permet d'avoir les informations détaillé du pokémon\n    const affichageDetailPokemon = (\n        <div className={\"card-detail-pokemon\"}>\n            <img className={\"card-detail-pokemon-image\"} src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pokemon.id + \".png\"}/>\n            <h2 className={\"card-detail-pokemon-nom\"}>{pokemon.name}</h2>\n        </div>\n    )\n\n    return(\n        <div>\n            {state !== 'rien'\n                ? affichageDetailPokemon\n                : <Spinner/>\n            }\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}