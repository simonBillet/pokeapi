{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\"; // Etat par défaut du Slice\n\nconst etatInitial = {\n  resultats: [{\n    id: 1,\n    name: 'Bubizarre'\n  }, {\n    id: 2,\n    name: 'Salameche'\n  }, {\n    id: 3,\n    name: 'Tiplouf'\n  }],\n  numeroPokemon: '0',\n  status: 'inactif'\n};\nexport const requeteIndex = createAsyncThunk('pokemon/requete', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/pokemon?limit=10&offset=' + etatInitial.numeroPokemon);\n  return reponse.results;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemon',\n  etatInitial,\n  reducers: {\n    pokemonRequete(state, action) {\n      state.numeroPokemon = action.payload.numeroPokemon;\n    }\n\n  },\n  extraReducers: {\n    [requeteIndex.pending]: (state, action) => {\n      state.status = 'en cour';\n    },\n    [requeteIndex.fulfilled]: (state, action) => {\n      state.status = 'succés';\n      state.resultats = action.payload;\n    }\n  }\n});\nexport const selectPokemon = state => state.pokemon.resultats;\nexport const selectorStatus = state => state.pokemon.status;\nexport const {\n  pokemonRequete\n} = pokemonSlice.actions;\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","etatInitial","resultats","id","name","numeroPokemon","status","requeteIndex","requete","reponse","get","results","pokemonSlice","reducers","pokemonRequete","state","action","payload","extraReducers","pending","fulfilled","selectPokemon","pokemon","selectorStatus","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,MAAR,QAAqB,kBAArB,C,CAEA;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,EAAG,CACR;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADQ,EAER;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFQ,EAGR;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHQ,CADI;AAMhBC,EAAAA,aAAa,EAAE,GANC;AAOhBC,EAAAA,MAAM,EAAE;AAPQ,CAApB;AAUA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAAC,iBAAD,EACxC,MAAMU,OAAN,IAAiB;AACjB,QAAMC,OAAO,GAAG,MAAMT,MAAM,CAACU,GAAP,CAAW,+DAA+DT,WAAW,CAACI,aAAtF,CAAtB;AACI,SAAOI,OAAO,CAACE,OAAf;AACH,CAJuC,CAArC;AAMP,MAAMC,YAAY,GAAGb,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BH,EAAAA,WAF6B;AAG7BY,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAe;AACzBD,MAAAA,KAAK,CAACV,aAAN,GAAsBW,MAAM,CAACC,OAAP,CAAeZ,aAArC;AACH;;AAHK,GAHmB;AAQ7Ba,EAAAA,aAAa,EAAE;AACX,KAACX,YAAY,CAACY,OAAd,GAAwB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACT,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACC,YAAY,CAACa,SAAd,GAA0B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACT,MAAN,GAAe,QAAf;AACAS,MAAAA,KAAK,CAACb,SAAN,GAAkBc,MAAM,CAACC,OAAzB;AACH;AAPU;AARc,CAAD,CAAhC;AAmBA,OAAO,MAAMI,aAAa,GAAGN,KAAK,IAAIA,KAAK,CAACO,OAAN,CAAcpB,SAA7C;AAEP,OAAO,MAAMqB,cAAc,GAAGR,KAAK,IAAIA,KAAK,CAACO,OAAN,CAAchB,MAA9C;AAEP,OAAO,MAAM;AAAEQ,EAAAA;AAAF,IAAqBF,YAAY,CAACY,OAAxC;AAEP,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nconst etatInitial = {\n    resultats : [\n        {id: 1, name: 'Bubizarre'},\n        {id: 2, name: 'Salameche'},\n        {id: 3, name: 'Tiplouf'},\n    ],\n    numeroPokemon: '0',\n    status: 'inactif'\n}\n\nexport const requeteIndex = createAsyncThunk('pokemon/requete',\n    async requete => {\n    const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/pokemon?limit=10&offset=' + etatInitial.numeroPokemon)\n        return reponse.results\n    })\n\nconst pokemonSlice = createSlice({\n    name: 'pokemon',\n    etatInitial,\n    reducers: {\n        pokemonRequete(state, action){\n            state.numeroPokemon = action.payload.numeroPokemon\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state, action) => {\n            state.status = 'en cour'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succés'\n            state.resultats = action.payload\n        }\n    }\n})\n\nexport const selectPokemon = state => state.pokemon.resultats\n\nexport const selectorStatus = state => state.pokemon.status\n\nexport const { pokemonRequete } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}