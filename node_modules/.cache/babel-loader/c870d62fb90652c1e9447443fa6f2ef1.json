{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonRandom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ajouterPokemonMesFavoris, requetePokemonId, selectDetailPokemonAleatoire, selectListeMesFavoris, selectorStatusPokemonAleatoire, supprimerPokemonMesFavoris } from \"./pokemonsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { Spinner } from \"./Spinner\";\nexport const PokemonRandom = () => {\n  _s();\n\n  // Informa sur le pokémon\n  const pokemon = useSelector(selectDetailPokemonAleatoire);\n  const listPokemon = useSelector(selectListeMesFavoris); // Status du pokémon\n\n  const state = useSelector(selectorStatusPokemonAleatoire); // dispatch\n\n  const dispatch = useDispatch(); // Fonction permettant de générer un nombre aléatoire\n\n  function getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  } // Limitation à 898 nombres car c'est le nombre de pokémon dans l'api\n\n\n  const index = Math.round(getRandomArbitrary(1, 898)); // Méthode appelé au lancement du fichier\n  // Permet de retourner un pokémon aléatoire si aucun pokémon n'a été retourné\n\n  useEffect(() => {\n    if (state === 'rien') {\n      dispatch(requetePokemonId(index));\n    }\n  }); // On vérifie si le pokémon sélectionné est déjà un favoris\n  // Si oui, on affiche un bouton pour l'enlever des favoris\n  // Si non, on affiche un bouton pour l'ajouter aux favoris\n\n  const verifFavoris = () => {\n    let estFavoris = false;\n    listPokemon.forEach(poke => {\n      if (poke.id === pokemon.id) {\n        estFavoris = true;\n      }\n    });\n\n    if (estFavoris) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card-detail-bouton-supprimer-favoris\",\n        onClick: supprimerPokemonFavoris,\n        role: \"Supprimer-favoris\",\n        children: \"Supprimer de mes favoris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"card-detail-bouton-ajouter-favoris\",\n        onClick: ajouterPokemonFavoris,\n        role: \"Ajouter-favoris\",\n        children: \"Ajouter \\xE0 mes favoris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    }\n  }; // Permet d'ajouter le pokémon à la liste des pokémons favoris de l'utilisateur\n\n\n  const ajouterPokemonFavoris = () => {\n    dispatch(ajouterPokemonMesFavoris(pokemon));\n  }; // Permet de supprimer le pokémon de la liste des pokémons favoris\n\n\n  const supprimerPokemonFavoris = () => {\n    dispatch(supprimerPokemonMesFavoris(pokemon));\n  }; // Permet d'avoir les informations détaillé du pokémon\n\n\n  const affichageDetailPokemon = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-pokemon-random\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-pokemon-random-image\",\n        src: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pokemon.id + \".png\",\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"card-pokemon-random-nom\",\n        children: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), verifFavoris()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-pokemon-random-sous-titres\",\n        children: \" Statistiques :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-pokemon-random-div\",\n        children: pokemon.length !== 0 ? pokemon.stats.map(stat => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-pokemon-random-texte-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: stat.stat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 74\n          }, this), \" : \", stat.base_stat]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-pokemon-random-sous-titres\",\n        children: \" Autres :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-pokemon-random-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-pokemon-random-texte\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"hauteur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 64\n          }, this), \" : \", pokemon.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-pokemon-random-texte\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"poids\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 64\n          }, this), \" : \", pokemon.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-pokemon-random-sous-titres\",\n        children: \" Type(s) :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-pokemon-random-div\",\n        children: pokemon.length !== 0 ? pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-pokemon-random-image-type\",\n          src: window.location.origin + '/types/' + type.type.name + '.png',\n          alt: \"type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state !== 'rien' ? affichageDetailPokemon : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonRandom, \"2zlzWLoIwTY8AnCSU6gLd7JYLDE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = PokemonRandom;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonRandom\");","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonRandom.js"],"names":["React","useEffect","useDispatch","ajouterPokemonMesFavoris","requetePokemonId","selectDetailPokemonAleatoire","selectListeMesFavoris","selectorStatusPokemonAleatoire","supprimerPokemonMesFavoris","useSelector","Spinner","PokemonRandom","pokemon","listPokemon","state","dispatch","getRandomArbitrary","min","max","Math","random","index","round","verifFavoris","estFavoris","forEach","poke","id","supprimerPokemonFavoris","ajouterPokemonFavoris","affichageDetailPokemon","name","length","stats","map","stat","base_stat","height","weight","types","type","window","location","origin"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    ajouterPokemonMesFavoris,\n    requetePokemonId,\n    selectDetailPokemonAleatoire, selectListeMesFavoris,\n    selectorStatusPokemonAleatoire, supprimerPokemonMesFavoris\n} from \"./pokemonsSlice\";\nimport { useSelector } from \"react-redux\";\nimport {Spinner} from \"./Spinner\";\n\nexport const PokemonRandom = () => {\n    // Informa sur le pokémon\n    const pokemon = useSelector(selectDetailPokemonAleatoire)\n\n    const listPokemon = useSelector(selectListeMesFavoris)\n\n    // Status du pokémon\n    const state = useSelector(selectorStatusPokemonAleatoire)\n    // dispatch\n    const dispatch = useDispatch()\n\n    // Fonction permettant de générer un nombre aléatoire\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    // Limitation à 898 nombres car c'est le nombre de pokémon dans l'api\n    const index = Math.round(getRandomArbitrary(1, 898))\n\n    // Méthode appelé au lancement du fichier\n    // Permet de retourner un pokémon aléatoire si aucun pokémon n'a été retourné\n    useEffect(() => {\n        if (state === 'rien'){\n            dispatch(requetePokemonId(index))\n        }\n    })\n\n    // On vérifie si le pokémon sélectionné est déjà un favoris\n    // Si oui, on affiche un bouton pour l'enlever des favoris\n    // Si non, on affiche un bouton pour l'ajouter aux favoris\n    const verifFavoris = () => {\n        let estFavoris = false\n\n        listPokemon.forEach(poke => {\n            if (poke.id === pokemon.id){\n                estFavoris = true\n            }\n        })\n\n        if (estFavoris){\n            return (<button className={\"card-detail-bouton-supprimer-favoris\"} onClick={supprimerPokemonFavoris} role={\"Supprimer-favoris\"}>Supprimer de mes favoris</button>)\n        } else {\n            return (<button className={\"card-detail-bouton-ajouter-favoris\"} onClick={ajouterPokemonFavoris} role={\"Ajouter-favoris\"}>Ajouter à mes favoris</button>)\n        }\n    }\n\n    // Permet d'ajouter le pokémon à la liste des pokémons favoris de l'utilisateur\n    const ajouterPokemonFavoris = () => {\n        dispatch(ajouterPokemonMesFavoris(pokemon))\n    }\n\n    // Permet de supprimer le pokémon de la liste des pokémons favoris\n    const supprimerPokemonFavoris = () => {\n        dispatch(supprimerPokemonMesFavoris(pokemon))\n    }\n\n    // Permet d'avoir les informations détaillé du pokémon\n    const affichageDetailPokemon = (\n        <div className={\"card-pokemon-random\"}>\n            <div className={\"col-sm-4\"}>\n                <img className={\"card-pokemon-random-image\"} src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + pokemon.id + \".png\"} alt={\"pokemon\"}/>\n                <h2 className={\"card-pokemon-random-nom\"}>{pokemon.name}</h2>\n                {verifFavoris()}\n            </div>\n            <div className={\"col-sm-8\"}>\n                <p className={\"card-pokemon-random-sous-titres\"}> Statistiques :</p>\n                <div className={\"card-pokemon-random-div\"}>\n                    {pokemon.length !== 0\n                        ?pokemon.stats.map(stat => (\n                            <p className={\"card-pokemon-random-texte-2\"}><strong>{ stat.stat.name }</strong> : { stat.base_stat }</p>\n                        ))\n                        :''\n                    }\n                </div>\n                <p className={\"card-pokemon-random-sous-titres\"}> Autres :</p>\n                <div className={\"card-pokemon-random-div\"}>\n                    <p className={\"card-pokemon-random-texte\"}><strong>hauteur</strong> : {pokemon.height}</p>\n                    <p className={\"card-pokemon-random-texte\"}><strong>poids</strong> : {pokemon.weight}</p>\n                </div>\n                <p className={\"card-pokemon-random-sous-titres\"}> Type(s) :</p>\n                <div className={\"card-pokemon-random-div\"}>\n                    {pokemon.length !== 0\n                        ?pokemon.types.map(type => (\n                            <img className={\"card-pokemon-random-image-type\"} src={window.location.origin + '/types/' + type.type.name + '.png'} alt={\"type\"}/>\n                        ))\n                        :''\n                    }\n                </div>\n            </div>\n        </div>\n    )\n\n    return(\n        <div>\n            {state !== 'rien'\n                ? affichageDetailPokemon\n                : <Spinner/>\n            }\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}