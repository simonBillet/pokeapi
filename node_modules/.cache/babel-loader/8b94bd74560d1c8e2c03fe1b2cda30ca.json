{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\";\nconst initialState = {\n  results: [{\n    id: '1',\n    title: 'Document 1'\n  }, {\n    id: '2',\n    title: 'Document 2'\n  }],\n  query: '',\n  status: 'idle',\n  selected: ''\n}; // This is managed by extra reducers\n\nexport const queryIndex = createAsyncThunk('documents/query', async query => {\n  const response = await client.get('https://pokeapi.co/api/v2/pokemon/' + query);\n  return response.data;\n});\nconst documentsSlice = createSlice({\n  name: 'documents',\n  initialState,\n  reducers: {\n    documentsQuery(state, action) {\n      state.query = action.payload.query;\n    },\n\n    documentDetail(state, action) {\n      state.selected = action.payload.selected;\n    }\n\n  },\n  extraReducers: {\n    [queryIndex.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [queryIndex.fulfilled]: (state, action) => {\n      state.status = 'succeeded'; // Add any fetched documents hits to the array\n\n      state.results = action.payload;\n    }\n  }\n}); // selectors\n\nexport const selectDocuments = state => state.documents.results; // selectors detail\n\nexport const selectDetail = state => state.documents.selected; // selectors status\n\nexport const selectorStatus = state => state.documents.status; // actions\n\nexport const {\n  documentsQuery,\n  documentDetail\n} = documentsSlice.actions;\nexport default documentsSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/ProjetPokemon/my-app/src/features/documents/documentsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","results","id","title","query","status","selected","queryIndex","response","get","data","documentsSlice","name","reducers","documentsQuery","state","action","payload","documentDetail","extraReducers","pending","fulfilled","selectDocuments","documents","selectDetail","selectorStatus","actions","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,MAAR,QAAqB,kBAArB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,CACN;AAAEC,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GADM,EAEN;AAAED,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE;AAAlB,GAFM,CADO;AAKjBC,EAAAA,KAAK,EAAG,EALS;AAMjBC,EAAAA,MAAM,EAAE,MANS;AAOjBC,EAAAA,QAAQ,EAAE;AAPO,CAArB,C,CASA;;AACA,OAAO,MAAMC,UAAU,GAAGV,gBAAgB,CAAC,iBAAD,EACtC,MAAMO,KAAN,IAAe;AACX,QAAMI,QAAQ,GAAG,MAAMT,MAAM,CAACU,GAAP,CAAW,uCAAqCL,KAAhD,CAAvB;AACA,SAAOI,QAAQ,CAACE,IAAhB;AACH,CAJqC,CAAnC;AAMP,MAAMC,cAAc,GAAGb,WAAW,CAAC;AAC/Bc,EAAAA,IAAI,EAAE,WADyB;AAE/BZ,EAAAA,YAF+B;AAG/Ba,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACX,KAAN,GAAcY,MAAM,CAACC,OAAP,CAAeb,KAA7B;AACH,KAHK;;AAINc,IAAAA,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACC,OAAP,CAAeX,QAAhC;AACH;;AANK,GAHqB;AAW/Ba,EAAAA,aAAa,EAAE;AACX,KAACZ,UAAU,CAACa,OAAZ,GAAsB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACV,MAAN,GAAe,SAAf;AACH,KAHU;AAIX,KAACE,UAAU,CAACc,SAAZ,GAAwB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACV,MAAN,GAAe,WAAf,CADuC,CAEvC;;AACAU,MAAAA,KAAK,CAACd,OAAN,GAAgBe,MAAM,CAACC,OAAvB;AACH;AARU;AAXgB,CAAD,CAAlC,C,CAsBA;;AACA,OAAO,MAAMK,eAAe,GAAGP,KAAK,IAAIA,KAAK,CAACQ,SAAN,CAAgBtB,OAAjD,C,CACP;;AACA,OAAO,MAAMuB,YAAY,GAAGT,KAAK,IAAIA,KAAK,CAACQ,SAAN,CAAgBjB,QAA9C,C,CACP;;AACA,OAAO,MAAMmB,cAAc,GAAGV,KAAK,IAAIA,KAAK,CAACQ,SAAN,CAAgBlB,MAAhD,C,CACP;;AACA,OAAO,MAAM;AAAES,EAAAA,cAAF;AAAkBI,EAAAA;AAAlB,IAAqCP,cAAc,CAACe,OAA1D;AACP,eAAef,cAAc,CAACgB,OAA9B","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\nconst initialState = {\n    results : [\n        { id: '1', title: 'Document 1' },\n        { id: '2', title: 'Document 2' }\n    ],\n    query : '',\n    status: 'idle',\n    selected: ''\n}\n// This is managed by extra reducers\nexport const queryIndex = createAsyncThunk('documents/query',\n    async query => {\n        const response = await client.get('https://pokeapi.co/api/v2/pokemon/'+query)\n        return response.data\n    })\n\nconst documentsSlice = createSlice({\n    name: 'documents',\n    initialState,\n    reducers: {\n        documentsQuery(state, action) {\n            state.query = action.payload.query\n        },\n        documentDetail(state, action) {\n            state.selected = action.payload.selected\n        }\n    },\n    extraReducers: {\n        [queryIndex.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [queryIndex.fulfilled]: (state, action) => {\n            state.status = 'succeeded'\n            // Add any fetched documents hits to the array\n            state.results = action.payload\n        }\n    }\n})\n// selectors\nexport const selectDocuments = state => state.documents.results\n// selectors detail\nexport const selectDetail = state => state.documents.selected\n// selectors status\nexport const selectorStatus = state => state.documents.status\n// actions\nexport const { documentsQuery, documentDetail } = documentsSlice.actions\nexport default documentsSlice.reducer\n"]},"metadata":{},"sourceType":"module"}