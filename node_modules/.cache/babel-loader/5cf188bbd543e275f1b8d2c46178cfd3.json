{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { DetailPokemon } from \"./DetailPokemon\";\nimport types from \"../../types.json\";\nimport { Spinner } from \"./Spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { requetePokemonType, selectorStatusListeType, selectPokemonListeType } from \"./pokemonsSlice\";\nimport { PokemonCardType } from \"./PokemonCardType\";\nexport const PokemonType = () => {\n  _s();\n\n  // Récupération de la liste des pokémons\n  const pokemons = useSelector(selectPokemonListeType); // dispatch\n\n  const dispatch = useDispatch(); // statut de la requête\n\n  const status = useSelector(selectorStatusListeType); // Permet de retourner une liste de pokémons si aucune liste n'a été retourné\n\n  useEffect(() => {\n    if (status === 'rien') {\n      dispatch(requetePokemonType(1));\n    }\n  });\n\n  const changertype = id => {\n    dispatch(requetePokemonType(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pok\\xE9mon par type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Les diff\\xE9rents types :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"liste-type-pokemon\",\n      children: types.map(type => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => changertype(type.id),\n        className: \"liste-type-pokemon-image\",\n        src: window.location.origin + '/types/' + type.name + '.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Liste selon le type s\\xE9lectionn\\xE9 :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), pokemons.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"liste-pokemon\",\n          children: status === 'succès' ? /*#__PURE__*/_jsxDEV(PokemonCardType, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 51\n          }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(DetailPokemon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonType, \"EU3uNSASkAQ85xoEib413246vGc=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = PokemonType;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonType\");","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/PokemonType.js"],"names":["React","useEffect","DetailPokemon","types","Spinner","useDispatch","useSelector","requetePokemonType","selectorStatusListeType","selectPokemonListeType","PokemonCardType","PokemonType","pokemons","dispatch","status","changertype","id","map","type","window","location","origin","name","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SACIC,kBADJ,EAEIC,uBAFJ,EAGIC,sBAHJ,QAIO,iBAJP;AAKA,SAAQC,eAAR,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAMC,QAAQ,GAAGN,WAAW,CAACG,sBAAD,CAA5B,CAF6B,CAI7B;;AACA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B,CAL6B,CAM7B;;AACA,QAAMS,MAAM,GAAGR,WAAW,CAACE,uBAAD,CAA1B,CAP6B,CAS7B;;AACAP,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIa,MAAM,KAAK,MAAf,EAAsB;AAClBD,MAAAA,QAAQ,CAACN,kBAAkB,CAAC,CAAD,CAAnB,CAAR;AACH;AACJ,GAJQ,CAAT;;AAMA,QAAMQ,WAAW,GAAIC,EAAD,IAAQ;AACxBH,IAAAA,QAAQ,CAACN,kBAAkB,CAACS,EAAD,CAAnB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAE,oBAAhB;AAAA,gBACKb,KAAK,CAACc,GAAN,CAAUC,IAAI,iBAEX;AAAK,QAAA,OAAO,EAAE,MAAMH,WAAW,CAACG,IAAI,CAACF,EAAN,CAA/B;AAA0C,QAAA,SAAS,EAAE,0BAArD;AAAiF,QAAA,GAAG,EAAEG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,SAAzB,GAAqCH,IAAI,CAACI,IAA1C,GAAiD;AAAvI;AAAA;AAAA;AAAA;AAAA,cAFH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAWI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKV,QAAQ,CAACW,MAAT,KAAoB,CAApB,gBAEG;AAAK,UAAA,SAAS,EAAE,eAAhB;AAAA,oBACKT,MAAM,KAAK,QAAX,gBAAqB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,kBAArB,gBAAyC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAD9C;AAAA;AAAA;AAAA;AAAA,gBAFH,gBAKI;AAAA;AAAA;AAAA;AAAA,gBAPT;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAlDM;;GAAMH,W;UAEQL,W,EAGAD,W,EAEFC,W;;;KAPNK,W","sourcesContent":["import React, {useEffect} from \"react\";\nimport {DetailPokemon} from \"./DetailPokemon\";\nimport types from \"../../types.json\";\nimport {Spinner} from \"./Spinner\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    requetePokemonType,\n    selectorStatusListeType,\n    selectPokemonListeType,\n} from \"./pokemonsSlice\";\nimport {PokemonCardType} from \"./PokemonCardType\";\n\nexport const PokemonType = () => {\n    // Récupération de la liste des pokémons\n    const pokemons = useSelector(selectPokemonListeType)\n\n    // dispatch\n    const dispatch = useDispatch()\n    // statut de la requête\n    const status = useSelector(selectorStatusListeType)\n\n    // Permet de retourner une liste de pokémons si aucune liste n'a été retourné\n    useEffect( () => {\n        if (status === 'rien'){\n            dispatch(requetePokemonType(1))\n        }\n    })\n\n    const changertype = (id) => {\n        dispatch(requetePokemonType(id))\n    }\n\n    return(\n        <div className=\"App container-fluid\">\n            <h1>Pokémon par type</h1>\n            <h2>Les différents types :</h2>\n            <div className={\"liste-type-pokemon\"}>\n                {types.map(type => (\n                    \n                    <img onClick={() => changertype(type.id)} className={\"liste-type-pokemon-image\"} src={window.location.origin + '/types/' + type.name + '.png'}/>\n                ))\n                }\n            </div>\n\n            <div className={\"row\"}>\n                <div className={\"col-sm-8\"}>\n                    <h2>Liste selon le type sélectionné :</h2>\n                    {pokemons.length !== 0\n                        ?\n                        <div className={\"liste-pokemon\"}>\n                            {status === 'succès' ?<PokemonCardType/> :<Spinner/>}\n                        </div>\n                        :<div></div>\n                    }\n                </div>\n\n                <div className={\"col-sm-4\"}>\n                    <DetailPokemon />\n                </div>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}