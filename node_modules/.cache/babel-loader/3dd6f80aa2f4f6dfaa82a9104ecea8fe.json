{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { client } from \"../../api/client\"; // Etat par défaut du Slice\n\nexport const initialState = {\n  resultats: [],\n  status: 'inactif',\n  statusPokemonCible: 'rien',\n  detailPokemonCible: '',\n  statusPokemonAleatoire: 'rien',\n  detailPokemonAleatoire: '',\n  statusListeType: 'rien',\n  listePokemonType: [],\n  listeMesFavoris: []\n}; // Recherche d'une liste de pokémon\n\nexport const requeteIndex = createAsyncThunk('pokemons/resultats', async query => {\n  const reponse = await client.get(query);\n  return reponse;\n}); // Recherche d'un pokémon par son nom\n\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/detailPokemonCible', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n}); // Recherche d'un pokémon par son id\n\nexport const requetePokemonId = createAsyncThunk('pokemons/detailPokemonAleatoire', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete);\n  return reponse;\n}); // recherche d'une liste de pokemon en fonction de leurs types\n\nexport const requetePokemonType = createAsyncThunk('pokemons/listePokemonType', async requete => {\n  const reponse = await client.get('https://pokeapi.co/api/v2/type/' + requete);\n  return reponse;\n});\nconst pokemonSlice = createSlice({\n  name: 'pokemons',\n  initialState,\n  reducers: {\n    pokemonNumeroRequete(state, action) {\n      state.status = action.payload.status;\n    },\n\n    pokemonDetailCible(state, action) {\n      state.statusPokemonCible = action.payload.statusPokemonCible;\n    },\n\n    pokemonDetailAleatoire(state, action) {\n      state.statusPokemonAleatoire = action.payload.statusPokemonAleatoire;\n    },\n\n    pokemonDetailType(state, action) {\n      state.statusListeType = action.payload.statusListeType;\n    },\n\n    ajouterPokemonMesFavoris(state, pokemon) {\n      state.listeMesFavoris.push(pokemon.payload);\n    },\n\n    supprimerPokemonMesFavoris(state, pokemon) {\n      console.log(initialState.listeMesFavoris);\n      state.listeMesFavoris.filter(item => {\n        console.log('début');\n        console.log(item);\n        console.log(pokemon);\n        return item.id !== pokemon.id;\n      });\n    }\n\n  },\n  extraReducers: {\n    [requeteIndex.pending]: state => {\n      state.status = 'en cours';\n    },\n    [requeteIndex.fulfilled]: (state, action) => {\n      state.status = 'succès';\n      state.resultats = action.payload;\n    },\n    [requeteDetailPokemon.fulfilled]: (state, action) => {\n      state.statusPokemonCible = 'succès';\n      state.detailPokemonCible = action.payload;\n    },\n    [requetePokemonId.fulfilled]: (state, action) => {\n      state.statusPokemonAleatoire = 'succès';\n      state.detailPokemonAleatoire = action.payload;\n    },\n    [requetePokemonType.fulfilled]: (state, action) => {\n      state.statusListeType = 'succès';\n      state.listePokemonType = action.payload;\n    }\n  }\n});\nexport const selectPokemonsListe = state => state.pokemons.resultats;\nexport const selectorStatus = state => state.pokemons.status;\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible;\nexport const selectorStatusPokemonCible = state => state.pokemons.statusPokemonCible;\nexport const selectDetailPokemonAleatoire = state => state.pokemons.detailPokemonAleatoire;\nexport const selectorStatusPokemonAleatoire = state => state.pokemons.statusPokemonAleatoire;\nexport const selectPokemonListeType = state => state.pokemons.listePokemonType;\nexport const selectorStatusListeType = state => state.pokemons.statusListeType;\nexport const selectListeMesFavoris = state => state.pokemons.listeMesFavoris;\nexport const {\n  pokemonNumeroRequete,\n  pokemonDetailCible,\n  pokemonDetailAleatoire,\n  pokemonDetailType,\n  ajouterPokemonMesFavoris,\n  supprimerPokemonMesFavoris\n} = pokemonSlice.actions;\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/Users/simonbillet/Documents/LicencePro/DWJSA/Poke-github/my-app/src/features/documents/pokemonsSlice.js"],"names":["createAsyncThunk","createSlice","client","initialState","resultats","status","statusPokemonCible","detailPokemonCible","statusPokemonAleatoire","detailPokemonAleatoire","statusListeType","listePokemonType","listeMesFavoris","requeteIndex","query","reponse","get","requeteDetailPokemon","requete","requetePokemonId","requetePokemonType","pokemonSlice","name","reducers","pokemonNumeroRequete","state","action","payload","pokemonDetailCible","pokemonDetailAleatoire","pokemonDetailType","ajouterPokemonMesFavoris","pokemon","push","supprimerPokemonMesFavoris","console","log","filter","item","id","extraReducers","pending","fulfilled","selectPokemonsListe","pokemons","selectorStatus","selectDetailPokemonCible","selectorStatusPokemonCible","selectDetailPokemonAleatoire","selectorStatusPokemonAleatoire","selectPokemonListeType","selectorStatusListeType","selectListeMesFavoris","actions","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\nimport {client} from \"../../api/client\";\n\n// Etat par défaut du Slice\nexport const initialState = {\n    resultats: [],\n    status: 'inactif',\n    statusPokemonCible: 'rien',\n    detailPokemonCible: '',\n    statusPokemonAleatoire: 'rien',\n    detailPokemonAleatoire: '',\n    statusListeType: 'rien',\n    listePokemonType: [],\n    listeMesFavoris: []\n}\n\n// Recherche d'une liste de pokémon\nexport const requeteIndex = createAsyncThunk('pokemons/resultats',\n    async query => {\n        const reponse = await client.get(query)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son nom\nexport const requeteDetailPokemon = createAsyncThunk('pokemons/detailPokemonCible',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n// Recherche d'un pokémon par son id\nexport const requetePokemonId = createAsyncThunk('pokemons/detailPokemonAleatoire',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/pokemon/' + requete)\n        return reponse\n    })\n\n// recherche d'une liste de pokemon en fonction de leurs types\nexport const requetePokemonType = createAsyncThunk('pokemons/listePokemonType',\n    async requete => {\n        const reponse = await client.get('https://pokeapi.co/api/v2/type/' + requete);\n        return reponse\n    })\n\n\nconst pokemonSlice = createSlice({\n    name: 'pokemons',\n    initialState,\n    reducers: {\n        pokemonNumeroRequete(state, action){\n            state.status = action.payload.status\n        },\n        pokemonDetailCible(state, action){\n            state.statusPokemonCible = action.payload.statusPokemonCible\n        },\n        pokemonDetailAleatoire(state, action){\n            state.statusPokemonAleatoire = action.payload.statusPokemonAleatoire\n        },\n        pokemonDetailType(state, action){\n            state.statusListeType = action.payload.statusListeType\n        },\n        ajouterPokemonMesFavoris(state, pokemon){\n            state.listeMesFavoris.push(pokemon.payload)\n        },\n        supprimerPokemonMesFavoris(state, pokemon){\n            console.log(initialState.listeMesFavoris)\n            state.listeMesFavoris.filter(item => {\n                console.log('début')\n                console.log(item)\n                console.log(pokemon)\n                return item.id !== pokemon.id\n            })\n        }\n    },\n    extraReducers: {\n        [requeteIndex.pending]: (state) => {\n            state.status = 'en cours'\n        },\n        [requeteIndex.fulfilled]: (state, action) => {\n            state.status = 'succès'\n            state.resultats = action.payload\n        },\n        [requeteDetailPokemon.fulfilled]: (state, action) => {\n            state.statusPokemonCible = 'succès'\n            state.detailPokemonCible = action.payload\n        },\n        [requetePokemonId.fulfilled]: (state, action) => {\n            state.statusPokemonAleatoire = 'succès'\n            state.detailPokemonAleatoire = action.payload\n        },\n        [requetePokemonType.fulfilled]: (state, action) => {\n            state.statusListeType = 'succès'\n            state.listePokemonType = action.payload\n        }\n    }\n})\n\nexport const selectPokemonsListe = state => state.pokemons.resultats\n\nexport const selectorStatus = state => state.pokemons.status\n\nexport const selectDetailPokemonCible = state => state.pokemons.detailPokemonCible\n\nexport const selectorStatusPokemonCible = state => state.pokemons.statusPokemonCible\n\nexport const selectDetailPokemonAleatoire = state => state.pokemons.detailPokemonAleatoire\n\nexport const selectorStatusPokemonAleatoire = state => state.pokemons.statusPokemonAleatoire\n\nexport const selectPokemonListeType = state => state.pokemons.listePokemonType\n\nexport const selectorStatusListeType = state => state.pokemons.statusListeType\n\nexport const selectListeMesFavoris = state => state.pokemons.listeMesFavoris\n\nexport const { pokemonNumeroRequete, pokemonDetailCible, pokemonDetailAleatoire, pokemonDetailType, ajouterPokemonMesFavoris, supprimerPokemonMesFavoris } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer\n"]},"metadata":{},"sourceType":"module"}